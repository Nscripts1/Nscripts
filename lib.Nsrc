local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local LocalPlayer = game:GetService("Players").LocalPlayer
local HttpService = game:GetService("HttpService")

local NscriptsLib = {
    Elements = {},
    ThemeObjects = {},
    Connections = {},
    Flags = {},
    Themes = {
        Default = {
            Main = Color3.fromRGB(25, 25, 25),
            Second = Color3.fromRGB(32, 32, 32),
            Stroke = Color3.fromRGB(60, 60, 60),
            Divider = Color3.fromRGB(60, 60, 60),
            Text = Color3.fromRGB(240, 240, 240),
            TextDark = Color3.fromRGB(150, 150, 150)
        }
    },
    SelectedTheme = "Default",
    Folder = nil,
    SaveCfg = false
}

-- Helper function to create UI elements
local function Create(Name, Properties, Children)
    local Object = Instance.new(Name)
    for i, v in next, Properties or {} do
        Object[i] = v
    end
    for i, v in next, Children or {} do
        v.Parent = Object
    end
    return Object
end

local function AddConnection(Signal, Function)
    if not NscriptsLib:IsRunning() then
        return
    end
    local SignalConnect = Signal:Connect(Function)
    table.insert(NscriptsLib.Connections, SignalConnect)
    return SignalConnect
end

function NscriptsLib:IsRunning()
    return Nscripts.Parent == game:GetService("CoreGui")
end

-- Make draggable function with smoother animations
local function MakeDraggable(DragPoint, Main)
    pcall(function()
        local Dragging, DragInput, MousePos, FramePos = false
        AddConnection(DragPoint.InputBegan, function(Input)
            if Input.UserInputType == Enum.UserInputType.MouseButton1 then
                Dragging = true
                MousePos = Input.Position
                FramePos = Main.Position
            end
        end)
        AddConnection(DragPoint.InputChanged, function(Input)
            if Input.UserInputType == Enum.UserInputType.MouseMovement then
                DragInput = Input
            end
        end)
        AddConnection(UserInputService.InputChanged, function(Input)
            if Input == DragInput and Dragging then
                local Delta = Input.Position - MousePos
                TweenService:Create(Main, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
                    Position = UDim2.new(FramePos.X.Scale, FramePos.X.Offset + Delta.X, FramePos.Y.Scale, FramePos.Y.Offset + Delta.Y)
                }):Play()
            end
        end)
    end)
end

-- Create elements using Orion library's design
local function CreateElement(ElementName, ElementFunction)
    NscriptsLib.Elements[ElementName] = function(...)
        return ElementFunction(...)
    end
end

-- Define UI elements
CreateElement("Corner", function(Scale, Offset)
    return Create("UICorner", {
        CornerRadius = UDim.new(Scale or 0, Offset or 10)
    })
end)

CreateElement("Stroke", function(Color, Thickness)
    return Create("UIStroke", {
        Color = Color or Color3.fromRGB(255, 255, 255),
        Thickness = Thickness or 1
    })
end)

CreateElement("List", function(Scale, Offset)
    return Create("UIListLayout", {
        SortOrder = Enum.SortOrder.LayoutOrder,
        Padding = UDim.new(Scale or 0, Offset or 0)
    })
end)

CreateElement("Padding", function(Bottom, Left, Right, Top)
    return Create("UIPadding", {
        PaddingBottom = UDim.new(0, Bottom or 4),
        PaddingLeft = UDim.new(0, Left or 4),
        PaddingRight = UDim.new(0, Right or 4),
        PaddingTop = UDim.new(0, Top or 4)
    })
end)

CreateElement("TFrame", function()
    return Create("Frame", {
        BackgroundTransparency = 1
    })
end)

CreateElement("Frame", function(Color)
    return Create("Frame", {
        BackgroundColor3 = Color or Color3.fromRGB(255, 255, 255),
        BorderSizePixel = 0
    })
end)

CreateElement("RoundFrame", function(Color, Scale, Offset)
    return Create("Frame", {
        BackgroundColor3 = Color or Color3.fromRGB(255, 255, 255),
        BorderSizePixel = 0
    }, {
        Create("UICorner", {
            CornerRadius = UDim.new(Scale, Offset)
        })
    })
end)

CreateElement("Button", function(Text, Size, Callback)
    local Button = Create("TextButton", {
        Text = Text or "",
        TextColor3 = Color3.fromRGB(255, 255, 255),
        BackgroundColor3 = Color3.fromRGB(50, 50, 50),
        Size = Size or UDim2.new(0, 200, 0, 50),
        Font = Enum.Font.Gotham,
        TextSize = 16,
        AutoButtonColor = false,
        BorderSizePixel = 0
    })
    
    AddConnection(Button.MouseButton1Click, Callback)
    return Button
end)

CreateElement("Slider", function(Min, Max, Default, Callback)
    local SliderFrame = Create("Frame", {
        BackgroundColor3 = Color3.fromRGB(30, 30, 30),
        Size = UDim2.new(0, 200, 0, 50)
    })

    local SliderBar = Create("Frame", {
        BackgroundColor3 = Color3.fromRGB(50, 50, 50),
        Size = UDim2.new(1, 0, 0, 10),
        Position = UDim2.new(0, 0, 0.5, -5)
    })

    local SliderButton = Create("Frame", {
        BackgroundColor3 = Color3.fromRGB(255, 0, 0),
        Size = UDim2.new(0, 20, 0, 20),
        Position = UDim2.new(0, Default, 0, -5)
    }, {
        Create("UICorner", {CornerRadius = UDim.new(0.5, 0)})
    })

    AddConnection(SliderButton.InputBegan, function(Input)
        if Input.UserInputType == Enum.UserInputType.MouseButton1 then
            local Dragging = true
            AddConnection(UserInputService.InputChanged, function(Input)
                if Dragging and Input.UserInputType == Enum.UserInputType.MouseMovement then
                    local MousePosition = Input.Position.X
                    local SliderPosition = math.clamp(MousePosition - SliderFrame.AbsolutePosition.X, 0, SliderFrame.AbsoluteSize.X)
                    SliderButton.Position = UDim2.new(0, SliderPosition, 0, -5)
                    Callback((SliderPosition / SliderFrame.AbsoluteSize.X) * (Max - Min) + Min)
                end
            end)
            AddConnection(UserInputService.InputEnded, function(Input)
                if Input.UserInputType == Enum.UserInputType.MouseButton1 then
                    Dragging = false
                end
            end)
        end
    end)

    return SliderFrame
end)

CreateElement("Toggle", function(Text, Default, Callback)
    local ToggleFrame = Create("Frame", {
        BackgroundColor3 = Color3.fromRGB(30, 30, 30),
        Size = UDim2.new(0, 200, 0, 50)
    })

    local ToggleLabel = Create("TextLabel", {
        Text = Text,
        TextColor3 = Color3.fromRGB(240, 240, 240),
        BackgroundTransparency = 1,
        Size = UDim2.new(1, -50, 1, 0),
        TextXAlignment = Enum.TextXAlignment.Left,
        Font = Enum.Font.Gotham,
        TextSize = 16
    })

    local ToggleButton = Create("TextButton", {
        Text = "",
        BackgroundColor3 = Default and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0),
        Size = UDim2.new(0, 50, 1, 0),
        BorderSizePixel = 0
    })
    
    AddConnection(ToggleButton.MouseButton1Click, function()
        Default = not Default
        ToggleButton.BackgroundColor3 = Default and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
        Callback(Default)
    end)

    ToggleButton.Parent = ToggleFrame
    ToggleLabel.Parent = ToggleFrame

    return ToggleFrame
end)

-- Setup for NotificationHolder
local NotificationHolder = Create("Frame", {
    Position = UDim2.new(1, -25, 1, -25),
    Size = UDim2.new(0, 300, 1, -25),
    AnchorPoint = Vector2.new(1, 1),
    BackgroundTransparency = 1
}, {
    Create("UIListLayout", {
        SortOrder = Enum.SortOrder.LayoutOrder,
        Padding = UDim.new(0, 5)
    })
})

-- Add NotificationHolder to the main GUI
NotificationHolder.Parent = game.CoreGui:FindFirstChild("Nscripts") or game.CoreGui

-- Example usage
local function TestGui()
    local MainFrame = CreateElement("RoundFrame")(Color3.fromRGB(50, 50, 50), 0.1, 5)
    MainFrame.Parent = NotificationHolder

    local Button = CreateElement("Button")("Click Me", UDim2.new(0, 100, 0, 50), function()
        print("Button clicked!")
    end)
    Button.Position = UDim2.new(0.5, -50, 0.5, -25)
    Button.Parent = MainFrame

    local Slider = CreateElement("Slider")(0, 100, 50, function(value)
        print("Slider value: " .. value)
    end)
    Slider.Position = UDim2.new(0.5, -100, 0, 100)
    Slider.Parent = MainFrame

    local Toggle = CreateElement("Toggle")("Enable Feature", false, function(state)
        print("Toggle state: " .. tostring(state))
    end)
    Toggle.Position = UDim2.new(0.5, -100, 0, 200)
    Toggle.Parent = MainFrame

    MakeDraggable(Button, MainFrame)
end

TestGui()
