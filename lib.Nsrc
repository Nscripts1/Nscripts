-- Nscripts Library

local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local CoreGui = game:GetService("CoreGui")
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local Nscripts = {}
Nscripts.__index = Nscripts

-- Default theme
local defaultTheme = {
    mainBackgroundColor = Color3.fromRGB(0, 0, 0),
    buttonColor = Color3.fromRGB(40, 40, 40),
    buttonHoverColor = Color3.fromRGB(60, 60, 60),
    sliderColor = Color3.fromRGB(50, 50, 50),
    sliderHandleColor = Color3.fromRGB(80, 80, 80),
    switchColor = Color3.fromRGB(60, 60, 60),
    switchSliderColor = Color3.fromRGB(90, 90, 90),
    switchSliderOnColor = Color3.fromRGB(0, 170, 0),
    textColor = Color3.fromRGB(255, 255, 255),
    font = Enum.Font.Gotham,
    textSize = 14
}

function Nscripts.new(theme)
    local self = setmetatable({}, Nscripts)
    self.theme = theme or defaultTheme
    self.objects = {}
    self.nextPosition = UDim2.new(0, 10, 0, 10)
    
    self:init()
    
    return self
end

-- Initialize the main GUI
function Nscripts:init()
    self.screenGui = Instance.new("ScreenGui")
    self.screenGui.Name = "Nscripts"
    self.screenGui.Parent = CoreGui

    self.mainFrame = Instance.new("Frame")
    self.mainFrame.Size = UDim2.new(0, 400, 0, 300)
    self.mainFrame.Position = UDim2.new(0.5, -200, 0.5, -150)
    self.mainFrame.BackgroundColor3 = self.theme.mainBackgroundColor
    self.mainFrame.BorderSizePixel = 0
    self.mainFrame.Parent = self.screenGui

    -- Add draggable functionality
    self:makeDraggable(self.mainFrame)

    -- Create loading animation
    self:createLoadingAnimation()
end

-- Create loading animation
function Nscripts:createLoadingAnimation()
    local loadingFrame = Instance.new("Frame")
    loadingFrame.Size = UDim2.new(1, 0, 1, 0)
    loadingFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    loadingFrame.BorderSizePixel = 0
    loadingFrame.Parent = self.screenGui
    
    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.Text = "Loading Nscripts Library..."
    textLabel.TextColor3 = self.theme.textColor
    textLabel.TextSize = 24
    textLabel.Font = self.theme.font
    textLabel.Parent = loadingFrame
    
    -- Add a simple tweening animation for loading effect
    local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, -1, true)
    local tween = TweenService:Create(textLabel, tweenInfo, {TextStrokeTransparency = 0})
    tween:Play()
    
    -- Remove loading frame after a short delay
    task.wait(2)
    loadingFrame:Destroy()
end

-- Make a GUI element draggable
function Nscripts:makeDraggable(frame)
    local dragging = false
    local dragInput, startPos, startPosFrame

    local function updatePosition(input)
        if dragging then
            local delta = input.Position - dragInput.Position
            frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end

    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragInput = input
            startPos = frame.Position
            startPosFrame = input.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    UserInputService.InputChanged:Connect(updatePosition)
end

-- Create a label
function Nscripts:createLabel(text, size)
    local label = Instance.new("TextLabel")
    label.Size = size
    label.Position = self.nextPosition
    label.Text = text
    label.TextColor3 = self.theme.textColor
    label.BackgroundTransparency = 1
    label.Font = self.theme.font
    label.TextSize = self.theme.textSize
    label.TextStrokeTransparency = 0.8
    label.Parent = self.mainFrame
    
    table.insert(self.objects, label)
    self:updateNextPosition(size)
    return label
end

-- Create a toggle button
function Nscripts:createToggle(size, callback)
    local container = Instance.new("Frame")
    container.Size = size
    container.Position = self.nextPosition
    container.BackgroundColor3 = self.theme.buttonColor
    container.BorderSizePixel = 0
    container.Parent = self.mainFrame

    local switch = Instance.new("Frame")
    switch.Size = UDim2.new(1, -10, 1, -10)
    switch.Position = UDim2.new(0, 5, 0, 5)
    switch.BackgroundColor3 = self.theme.switchColor
    switch.BorderSizePixel = 0
    switch.Parent = container

    local switchSlider = Instance.new("Frame")
    switchSlider.Size = UDim2.new(0, 20, 1, -4)
    switchSlider.Position = UDim2.new(0, 2, 0, 2)
    switchSlider.BackgroundColor3 = self.theme.switchSliderColor
    switchSlider.BorderSizePixel = 0
    switchSlider.Parent = switch

    local toggled = false
    switch.MouseButton1Click:Connect(function()
        toggled = not toggled
        switch.BackgroundColor3 = toggled and self.theme.switchSliderOnColor or self.theme.switchColor
        switchSlider.Position = toggled and UDim2.new(1, -22, 0, 2) or UDim2.new(0, 2, 0, 2)
        switchSlider.BackgroundColor3 = toggled and self.theme.switchSliderOnColor or self.theme.switchSliderColor
        callback(toggled)
    end)

    table.insert(self.objects, container)
    self:updateNextPosition(size)
    return container
end

-- Create a slider
function Nscripts:createSlider(size, min, max, step, callback)
    local slider = Instance.new("Frame")
    slider.Size = size
    slider.Position = self.nextPosition
    slider.BackgroundColor3 = self.theme.sliderColor
    slider.BorderSizePixel = 0
    slider.Parent = self.mainFrame

    local handle = Instance.new("Frame")
    handle.Size = UDim2.new(0, 20, 1, -4)
    handle.Position = UDim2.new(0, 2, 0, 2)
    handle.BackgroundColor3 = self.theme.sliderHandleColor
    handle.BorderSizePixel = 0
    handle.Parent = slider

    local currentValue = min

    local function updateHandlePosition(x)
        local posX = math.clamp(x - slider.AbsolutePosition.X, 0, size.X.Offset)
        handle.Position = UDim2.new(0, posX, 0, 0)
        currentValue = math.floor((posX / size.X.Offset) * (max - min) / step + 0.5) * step + min
        callback(currentValue)
    end

    slider.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            updateHandlePosition(input.Position.X)
            local conn
            conn = UserInputService.InputChanged:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseMovement then
                    updateHandlePosition(input.Position.X)
                end
            end)
            UserInputService.InputEnded:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    conn:Disconnect()
                end
            end)
        end
    end)

    table.insert(self.objects, slider)
    self:updateNextPosition(size)
    return slider
end

-- Create a dropdown
function Nscripts:createDropdown(size, options, callback)
    local dropdown = Instance.new("TextButton")
    dropdown.Size = size
    dropdown.Position = self.nextPosition
    dropdown.Text = "Select an option"
    dropdown.TextColor3 = self.theme.textColor
    dropdown.BackgroundColor3 = self.theme.buttonColor
    dropdown.Font = self.theme.font
    dropdown.TextSize = self.theme.textSize
    dropdown.TextStrokeTransparency = 0.8
    dropdown.Parent = self.mainFrame

    local dropdownFrame = Instance.new("Frame")
    dropdownFrame.Size = UDim2.new(1, 0, 0, #options * size.Y.Offset)
    dropdownFrame.Position = UDim2.new(0, 0, 1, 0)
    dropdownFrame.BackgroundColor3 = self.theme.mainBackgroundColor
    dropdownFrame.Visible = false
    dropdownFrame.Parent = dropdown

    local optionList = Instance.new("UIListLayout")
    optionList.Parent = dropdownFrame

    for _, option in ipairs(options) do
        local button = Instance.new("TextButton")
        button.Size = UDim2.new(1, 0, 0, size.Y.Offset)
        button.Text = option
        button.TextColor3 = self.theme.textColor
        button.BackgroundColor3 = self.theme.buttonColor
        button.Font = self.theme.font
        button.TextSize = self.theme.textSize
        button.TextStrokeTransparency = 0.8
        button.Parent = dropdownFrame

        button.MouseButton1Click:Connect(function()
            dropdown.Text = option
            dropdownFrame.Visible = false
            callback(option)
        end)
    end

    dropdown.MouseButton1Click:Connect(function()
        dropdownFrame.Visible = not dropdownFrame.Visible
    end)

    table.insert(self.objects, dropdown)
    self:updateNextPosition(size)
    return dropdown
end

-- Update next position for UI elements
function Nscripts:updateNextPosition(size)
    local offset = size.Y.Offset + 10
    self.nextPosition = UDim2.new(self.nextPosition.X.Scale, self.nextPosition.X.Offset, self.nextPosition.Y.Scale, self.nextPosition.Y.Offset + offset)
end

return Nscripts
